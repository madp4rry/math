from manim import *

class Video1(Scene):
    def construct(self):

        matrix0= Matrix([["a_{11}", "a_{12}", "a_{13}", "b_{1}"],
             ["a_{21}", "a_{22}", "a_{23}", "b_{2}"],
             ["a_{31}", "a_{32}", "a_{33}", "b_{3}"]])
        matrix0_elements = matrix0.get_entries()
        vertical_line = Line(UP, DOWN).set_height(matrix0.get_height()).next_to(matrix0_elements[2], RIGHT, buff=0.5).shift(DOWN * 0.75)
        vertical_line.set_stroke(color=WHITE, width=1.5)
        
        matrix_with_line0 = VGroup(matrix0, vertical_line).scale(0.6)
        
        second_row_elements = VGroup(matrix0_elements[4 : 8])
        third_row_elements = VGroup(matrix0_elements[8 :12])
    
        matrix05 = Matrix([["a_{11}", "a_{12}", "a_{13}", "b_{1}"],
             ["ka_{31}", "ka_{32}", "ka_{33}", "kb_{3}"],
             ["a_{21}", "a_{22}", "a_{23}", "b_{2}"]])
        matrix05_elements = matrix05.get_entries()
        vertical_line = Line(UP, DOWN).set_height(matrix05.get_height()).next_to(matrix05_elements[2], RIGHT, buff=0.5).shift(DOWN * 0.75)
        vertical_line.set_stroke(color=WHITE, width=1.5)
        matrix_with_line05 = VGroup(matrix05, vertical_line).scale(0.6)
        k_row_elements =VGroup(matrix05_elements[4 : 8])


        matrix1 = Matrix([["a_{11}", "a_{12}", "a_{13}", "b_{1}"],
             ["ka_{31}", "ka_{32}", "ka_{33}", "kb_{3}"],
             ["0", "a_{22}", "a_{23}", "b_{2}"]]).shift(DOWN *2)
        matrix1_elements = matrix1.get_entries()
        vertical_line = Line(UP, DOWN).set_height(matrix1.get_height()).next_to(matrix1_elements[2], RIGHT, buff=0.5).shift(DOWN * 0.75)
        vertical_line.set_stroke(color=WHITE, width=1.5)
        
        matrix_with_line1 = VGroup(matrix1, vertical_line).scale(0.6)
        
        matrix2 = Matrix([["a_{11}", "a_{12}", "a_{13}", "b_{1}"],
             ["0", "ka_{32}", "ka_{33}", "kb_{3}"],
             ["0", "a_{22}", "a_{23}", "b_{2}"]]).shift(DOWN *2)
        matrix2_elements = matrix2.get_entries()
        vertical_line = Line(UP, DOWN).set_height(matrix2.get_height()).next_to(matrix2_elements[2], RIGHT, buff=0.5).shift(DOWN * 0.75)
        vertical_line.set_stroke(color=WHITE, width=1.5)
        matrix_with_line2 = VGroup(matrix2, vertical_line).scale(0.6)
        
        matrix3 = Matrix([["a_{11}", "a_{12}", "a_{13}", "b_{1}"],
             ["0", "ka_{32}", "ka_{33}", "kb_{3}"],
             ["0", "0", "a_{33}", "b_{3}"]]).shift(DOWN *2)
        matrix3_elements = matrix3.get_entries()
        vertical_line = Line(UP, DOWN).set_height(matrix3.get_height()).next_to(matrix3_elements[2], RIGHT, buff=0.5).shift(DOWN * 0.75)
        vertical_line.set_stroke(color=WHITE, width=1.5)
        matrix_with_line3 = VGroup(matrix3, vertical_line).scale(0.6)
    
        Constant = MathTex(r"\cdot k").shift(RIGHT *1.9).scale(0.7)

        DownArrow = Tex(r"$\big\Downarrow$").scale(1.5)

        Multiplier = MathTex(r"III - II").shift(RIGHT*2.25 + UP*1.5).scale(0.5)
        
        self.play(Create(matrix_with_line0))
        self.wait(2)
        self.play(second_row_elements.animate.scale(1).shift(DOWN*0.5), 
                  third_row_elements.animate.scale(1).shift(UP*0.5), run_time=1.5)
        self.wait(2)
        self.play(Create(Constant))
        self.play(Transform(third_row_elements, k_row_elements), FadeOut(Constant))
        self.play(matrix_with_line0.animate.scale(1).shift(UP * 2), run_time=1.5)
        self.wait(2)
        self.play(Create(Multiplier))
        self.play(FadeIn(DownArrow))
        self.play(Create(matrix_with_line1))
        self.wait(2)
        self.play(FadeOut(matrix_with_line0, Multiplier))
        self.play(matrix_with_line1.animate.scale(1).shift(UP * 4), run_time=1.5)
        self.play(Create(matrix_with_line2))
        self.wait(2)
        self.play(FadeOut(matrix_with_line1))
        self.play(matrix_with_line2.animate.scale(1).shift(UP * 4), run_time=1.5)
        self.play(Create(matrix_with_line3))
        self.wait(2)
        self.play(FadeOut(matrix_with_line2))
        self.play(Succession(FadeOut(DownArrow), matrix_with_line3.animate.scale(1).shift(UP * 2)))

    




